{"version":3,"sources":["types/types.js","reducers/uiReducer.js","reducers/calendarReducer.js","reducers/authReducer.js","reducers/rootReducer.js","store/store.js","helpers/fetch.js","helpers/prepareEvents.js","actions/events.js","actions/auth.js","hooks/useForm.js","components/auth/LoginScreen.js","components/ui/Navbar.js","helpers/calendarMessagesEs.js","actions/ui.js","components/calendar/CalendarEvent.js","components/calendar/CalendarModal.js","components/ui/AddNewFab.js","components/ui/DeleteEventFab.js","components/calendar/CalendarScreen.js","routers/PublicRoute.js","routers/PrivateRoute.js","routers/AppRouter.js","CalendarApp.js","index.js"],"names":["types","initialState","modalOpen","events","activeEvent","checking","rootReducer","combineReducers","ui","state","action","type","calendar","payload","map","event","id","filter","auth","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","baseUrl","process","fetchWithoutToken","endpoint","data","method","url","fetch","headers","body","JSON","stringify","fetchWithToken","token","localStorage","getItem","prepareEvents","e","end","moment","toDate","start","eventAddNew","eventClearActiveEvent","eventUpdated","eventDeleted","eventLoaded","checkingFinish","login","user","startLogout","dispatch","clear","logout","useForm","useState","values","setValues","reset","handleInputChange","target","name","value","LoginScreen","useDispatch","lEmail","lPassword","formLoginValues","handleLoginInputChange","rName","rEmail","rPassword","rConfirmPassword","formRegisterValues","handleRegisterInputChange","className","onSubmit","email","password","preventDefault","a","resp","json","ok","setItem","Date","getTime","uid","Swal","fire","msg","placeholder","onChange","Navbar","useSelector","onClick","messages","allDay","previous","next","today","month","week","day","agenda","date","time","noEventsInRange","showMore","total","uiOpenModal","CalendarEvent","title","customStyles","content","top","left","right","bottom","marginRight","transform","Modal","setAppElement","nowGlobal","minutes","seconds","add","endGlobal","clone","initEvent","notes","CalendarModal","dateStart","setDateStart","dateEnd","setDateEnd","titleValid","setTitleValid","formValues","setFormValues","useEffect","closeModal","isOpen","onRequestClose","style","closeTimeoutMS","overlayClassName","momentStart","momentEnd","isSameOrAfter","trim","length","console","log","getState","_id","eventStartAddNew","minDate","autoComplete","rows","AddNewFab","DeleteEventFab","hidden","locale","localizer","momentLocalizer","CalendarScreen","lastView","setLastView","startAccessor","endAccessor","eventPropGetter","isSelected","backgroundColor","borderRadius","opacity","display","color","onDoubleClickEvent","onSelectEvent","onView","onSelectSlot","selectable","view","components","PublicRoute","isLoggedIn","Component","component","rest","props","to","PrivateRoute","AppRouter","exact","path","CalendarApp","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a8bbeb89.chunk.js","sourcesContent":["export const types = {\n\n    uiOpenModal: '[ui] Open modal',\n    uiCloseModal: '[ui] Close modal',\n\n    eventSetActive: '[event] Set Active',\n    eventLogout: '[event] Clear Active Note Logout',\n    eventStartAddNew: '[event] Start Add New',\n    eventAddNew: '[event] Add New',\n    eventClearActive: '[event] Clear Active Event',\n    eventUpdated: '[event] Event Updated',\n    eventDeleted: '[event] Event Deleted',\n    eventLoaded: '[event] Events Loaded',\n\n    authCheckingFinish: '[auth] Finish Checking Login State',\n    authStartLogin: '[auth] Start Login',\n    authLogin: '[auth] Login',\n    authStartRegister: '[auth] Start Register',\n    authStartTokenRenew: '[auth] Start Token Renew',\n    authLogout: '[auth] Logout'\n    \n}","import { types } from \"../types/types\";\n\nconst initialState = {\n    modalOpen: false,\n}\n\nexport const uiReducer = ( state = initialState, action ) => {\n\n    switch ( action.type ) {\n        case types.uiOpenModal:\n            return {\n                ...state,\n                modalOpen: true\n            }\n\n        case types.uiCloseModal:\n            return {\n                ...state,\n                modalOpen: false\n            }\n            \n        default:\n            return state;\n    }\n\n\n}","import { types } from '../types/types';\n\n// {\n//     id: new Date().getTime(),\n//     title: 'Cumpleaños del jefe',\n//     start: moment().toDate(),\n//     end: moment().add(2, 'hours').toDate(),\n//     notes: 'Comprar el pastel',\n//     user: {\n//         _id: '123',\n//         name: 'Raul'\n//     }\n// },\n// {\n//     id: new Date().getTime(),\n//     title: 'Desayuno 14 de febrero',\n//     start: moment().add(3, 'days').add(1,'hour').toDate(),\n//     end: moment().add(3, 'days').add(2,'hours').toDate(),\n//     notes: 'Llevar regalos',\n//     user: {\n//         _id: '124',\n//         name: 'Fernando'\n//     }\n// }\n\nconst initialState = {\n    events: [],\n    activeEvent: null\n};\n\nexport const calendarReducer = ( state = initialState, action ) => {\n\n    switch ( action.type ) {\n        case types.eventSetActive:\n            return {\n                ...state,\n                activeEvent: {\n                    ...action.payload\n                }\n            };\n\n        case types.eventAddNew:\n            return {\n                ...state,\n                events: [ action.payload, ...state.events ]\n            }\n        \n        case types.eventClearActive:\n            return {\n                ...state,\n                activeEvent: null\n            }\n        \n        case types.eventUpdated:\n            return {\n                ...state,\n                events: state.events.map( \n                    event => ( event.id === action.payload.id ) ? action.payload : event\n                )\n            }\n        \n        case types.eventDeleted:\n            return {\n                ...state,\n                events: state.events.filter(\n                    event => ( event.id !== state.activeEvent.id )\n                ),\n                activeEvent: null\n            }\n        \n        case types.eventLoaded:\n            return {\n                ...state,\n                events: [ ...action.payload ]\n            }\n        \n        case types.eventLogout:\n            return {\n                ...initialState\n            }\n    \n        default:\n            return state;\n    }\n\n}","import { types } from \"../types/types\";\n\nconst initialState = {\n    checking: true,\n    // uid: null,\n    // name: null\n}\n\nexport const authReducer = ( state = initialState, action ) => {\n\n    switch ( action.type ) {\n\n        case types.authLogin:\n            return {\n                ...state,\n                ...action.payload,\n                checking: false\n            }\n        \n        case types.authCheckingFinish:\n            return {\n                ...state,\n                checking: false\n            }\n\n        case types.authLogout:\n            return {\n                checking: false\n            }\n        \n\n        default:\n            return state;\n    }\n\n}","import { combineReducers } from 'redux';\n\nimport { uiReducer } from './uiReducer';\nimport { calendarReducer } from './calendarReducer';\nimport { authReducer } from './authReducer';\n\n\nexport const rootReducer = combineReducers({\n    ui: uiReducer,\n    calendar: calendarReducer,\n    auth: authReducer\n    // TODO: CalendarReducer\n});","import { createStore, applyMiddleware, compose } from 'redux';\nimport thunk from 'redux-thunk';\n\nimport { rootReducer } from '../reducers/rootReducer';\n\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\n\nexport const store = createStore(\n    rootReducer,\n    composeEnhancers(\n        applyMiddleware( thunk )\n    )\n);","const baseUrl = process.env.REACT_APP_API_URL;\n\n\nconst fetchWithoutToken = ( endpoint, data, method = 'GET' ) => {\n\n    const url = `${ baseUrl }/${ endpoint }`; // localhost:4000/api/auth\n\n    if ( method === 'GET' ) {\n        return fetch( url );\n    } else {\n        return fetch( url, {\n            method,\n            headers: {\n                'Content-type': 'application/json'\n            },\n            body: JSON.stringify( data )\n        });\n    }\n\n}\n\nconst fetchWithToken = ( endpoint, data, method = 'GET' ) => {\n\n    const url = `${ baseUrl }/${ endpoint }`; // localhost:4000/api/auth\n    const token = localStorage.getItem('token') || '';\n\n    if ( method === 'GET' ) {\n        return fetch( url, {\n            method,\n            headers: {\n                'x-token': token\n            }\n        } );\n    } else {\n        return fetch( url, {\n            method,\n            headers: {\n                'Content-type': 'application/json',\n                'x-token': token\n            },\n            body: JSON.stringify( data )\n        })\n    }\n\n}\n\nexport {\n    fetchWithoutToken,\n    fetchWithToken\n}","import moment from 'moment';\n\nexport const prepareEvents = (events = []) => {\n\n    return events.map(\n        (e) => ({\n            ...e,\n            end: moment( e.end ).toDate(),\n            start: moment( e.start ).toDate()\n        })\n    );\n\n}","import Swal from 'sweetalert2';\nimport { fetchWithToken } from \"../helpers/fetch\";\nimport { types } from \"../types/types\";\nimport { prepareEvents } from \"../helpers/prepareEvents\";\n\nexport const eventStartAddNew = ( event ) => {\n    return async(dispatch, getState) => {\n\n        const { uid, name } = getState().auth;\n\n        try {\n            \n            const resp = await fetchWithToken('events', event, 'POST');\n            const body = await resp.json();\n    \n            if ( body.ok ) {\n\n                event.id = body.event.id;\n                event.user = {\n                    _id: uid,\n                    name: name\n                }\n\n                dispatch( eventAddNew(event) );\n            }\n\n        } catch (error) {\n            console.log(error);\n        }\n        \n        \n    }\n}\n\nconst eventAddNew = (event, id) => ({\n    type: types.eventAddNew,\n    payload: {\n        ...event,\n        id\n    }\n});\n\nexport const eventSetActive = (event) => ({\n    type: types.eventSetActive,\n    payload: {\n        ...event\n    }\n});\n\nexport const eventClearActiveEvent = () => ({ type: types.eventClearActive });\n\nexport const eventStartUpdate = (event) => {\n    return async(dispatch) => {\n        try {\n            \n            const resp = await fetchWithToken(`events/${ event.id }`, event, 'PUT');\n            const body = await resp.json();\n\n            if ( body.ok ) {\n                dispatch( eventUpdated( event ) );\n            } else {\n                Swal.fire('Error', body.msg, 'error');\n            }\n\n        } catch (error) {\n            console.log(error);\n        }\n    }\n}\n\nconst eventUpdated = ( event ) => ({\n    type: types.eventUpdated,\n    payload: event\n});\n\nexport const eventStartDelete = (event) => {\n    return async(dispatch, getState) => {\n\n        const { id } = getState().calendar.activeEvent;\n\n        try {\n            \n            const resp = await fetchWithToken(`events/${ id }`, {}, 'DELETE');\n            const body = await resp.json();\n\n            if ( body.ok ) {\n                dispatch( eventDeleted() );\n            } else {\n                Swal.fire('Error', body.msg, 'error');\n            }\n\n        } catch (error) {\n            console.log(error);\n        }\n    }\n}\n\nconst eventDeleted = () => ({ type: types.eventDeleted });\n\nexport const eventStartLoading = () => {\n    return async(dispatch) => {\n\n        try {\n\n            const resp = await fetchWithToken('events');\n            const body = await resp.json();\n\n            const events = prepareEvents(body.events);\n\n            dispatch( eventLoaded( events ) );\n            \n        } catch (error) {\n            console.log(error);\n        }\n\n    }\n}\n\nconst eventLoaded = ( events ) => ({\n    type: types.eventLoaded,\n    payload: events\n});\n\nexport const eventLogout = () => ({ type: types.eventLogout });","import Swal from \"sweetalert2\";\nimport { types } from \"../types/types\";\nimport { fetchWithoutToken, fetchWithToken } from \"../helpers/fetch\"\nimport { eventLogout } from \"./events\";\n\n\nexport const startLogin = ( email, password ) => {\n    return async( dispatch ) => {\n        \n        const resp = await fetchWithoutToken( 'auth', { email, password }, 'POST' );\n        const body = await resp.json();\n\n        if ( body.ok ) {\n            localStorage.setItem('token', body.token );\n            localStorage.setItem('token-init-date', new Date().getTime() );\n\n            dispatch( login({\n                uid: body.uid,\n                name: body.name\n            }) );\n        } else {\n            Swal.fire('Error', body.msg, 'error');\n        }\n\n    }\n}\n\nexport const startRegister = ( name, email, password ) => {\n\n    return async( dispatch ) => {\n\n        const resp = await fetchWithoutToken( 'auth/new', { name, email, password }, 'POST');\n        const body = await resp.json();\n\n        if ( body.ok ) {\n            localStorage.setItem('token', body.token );\n            localStorage.setItem('token-init-date', new Date().getTime() );\n\n            dispatch( login({\n                uid: body.uid,\n                name: body.name\n            }) );\n        } else {\n            Swal.fire('Error', body.msg, 'error');\n        }       \n\n    } \n\n}\n\nexport const startChecking = () => {\n    return async(dispatch) => {\n\n        const resp = await fetchWithToken( 'auth/renew' );\n        const body = await resp.json();\n\n        if ( body.ok ) {\n            localStorage.setItem('token', body.token );\n            localStorage.setItem('token-init-date', new Date().getTime() );\n\n            dispatch( login({\n                uid: body.uid,\n                name: body.name\n            }) );\n\n        } else {\n            dispatch( checkingFinish() );\n        }         \n\n    }\n}\n\nconst checkingFinish = () => ({ type: types.authCheckingFinish });\n\nconst login = ( user ) => ({\n\n    type: types.authLogin,\n    payload: user\n\n});\n\nexport const startLogout = () => {\n    return (dispatch) => {\n        localStorage.clear();\n        dispatch( eventLogout() );\n        dispatch( logout() );\n    }\n}\n\nconst logout = () => ({ type: types.authLogout });","import { useState } from \"react\"\n\nexport const useForm = ( initialState = {} ) => {\n\n    const [values, setValues] = useState(initialState);\n\n    const reset = () => {\n        setValues( initialState );\n    }\n\n    const handleInputChange = ({ target }) => {\n        setValues({\n            ...values,\n            [ target.name ]: target.value,\n        });\n    }\n\n    return [ values, handleInputChange, reset ];\n\n}","import React from 'react';\nimport { useDispatch } from 'react-redux';\n\nimport { useForm } from '../../hooks/useForm';\nimport { startLogin, startRegister } from '../../actions/auth';\n\nimport Swal from 'sweetalert2';\n\nimport './login.css';\n\nconst LoginScreen = () => {\n\n    const dispatch = useDispatch();\n\n    const [ formLoginValues, handleLoginInputChange ] = useForm({\n        lEmail: 'raul@gmail.com',\n        lPassword: 'hola77' \n    });\n\n    const { lEmail, lPassword } = formLoginValues;\n\n    const [ formRegisterValues, handleRegisterInputChange ] = useForm({\n        rName: 'Sofia',\n        rEmail: 'sofia@gmail.com',\n        rPassword: 'hola77',\n        rConfirmPassword: 'hola77' \n    });\n\n    const { rName, rEmail, rPassword, rConfirmPassword } = formRegisterValues;\n\n    const handleLogin = (e) => {\n        e.preventDefault();\n\n        dispatch( startLogin( lEmail, lPassword ) );\n    }\n\n    const handleAddNewUser = (e) => {\n        e.preventDefault();\n\n        if ( rPassword !== rConfirmPassword ) {\n            return Swal.fire('Error', 'Las contraseñas deben de ser iguales', 'error');\n        }\n\n        dispatch( startRegister( rName, rEmail, rPassword ) );\n    }\n\n    return (\n        <div className=\"container login-container\">\n            <div className=\"row\">\n                <div className=\"col-md-6 login-form-1\">\n                    <h3>Ingreso</h3>\n                    <form onSubmit={ handleLogin }>\n                        <div className=\"form-group\">\n                            <input \n                                type=\"text\"\n                                className=\"form-control\"\n                                placeholder=\"Correo\"\n                                name=\"lEmail\"\n                                value={ lEmail }\n                                onChange={ handleLoginInputChange }\n                            />\n                        </div>\n                        <div className=\"form-group\">\n                            <input\n                                type=\"password\"\n                                className=\"form-control\"\n                                placeholder=\"Contraseña\"\n                                name=\"lPassword\"\n                                value={ lPassword }\n                                onChange={ handleLoginInputChange }\n                            />\n                        </div>\n                        <div className=\"form-group\">\n                            <input \n                                type=\"submit\"\n                                className=\"btnSubmit\"\n                                value=\"Login\" \n                            />\n                        </div>\n                    </form>\n                </div>\n\n                <div className=\"col-md-6 login-form-2\">\n                    <h3>Registro</h3>\n                    <form onSubmit={ handleAddNewUser }>\n                        <div className=\"form-group\">\n                            <input\n                                type=\"text\"\n                                className=\"form-control\"\n                                placeholder=\"Nombre\"\n                                name=\"rName\"\n                                value={ rName }\n                                onChange={ handleRegisterInputChange }\n                            />\n                        </div>\n                        <div className=\"form-group\">\n                            <input\n                                type=\"email\"\n                                className=\"form-control\"\n                                placeholder=\"Correo\"\n                                name=\"rEmail\"\n                                value={ rEmail }\n                                onChange={ handleRegisterInputChange }\n                            />\n                        </div>\n                        <div className=\"form-group\">\n                            <input\n                                type=\"password\"\n                                className=\"form-control\"\n                                placeholder=\"Contraseña\"\n                                name=\"rPassword\"\n                                value={ rPassword }\n                                onChange={ handleRegisterInputChange }\n                            />\n                        </div>\n\n                        <div className=\"form-group\">\n                            <input\n                                type=\"password\"\n                                className=\"form-control\"\n                                placeholder=\"Repita la contraseña\"\n                                name=\"rConfirmPassword\"\n                                value={ rConfirmPassword }\n                                onChange={ handleRegisterInputChange }\n                            />\n                        </div>\n\n                        <div className=\"form-group\">\n                            <input \n                                type=\"submit\" \n                                className=\"btnSubmit\" \n                                value=\"Crear cuenta\" />\n                        </div>\n                    </form>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default LoginScreen;\n","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { startLogout } from '../../actions/auth';\n\nconst Navbar = () => {\n\n    const dispatch = useDispatch();\n\n    const { name } = useSelector(state => state.auth);\n\n    const handleLogout = () => {\n        dispatch( startLogout() );\n    }\n\n    return (\n        <div className=\"navbar navbar-dark bg-dark mb-4\">\n            <span className=\"navbar-bran\">\n                { name }\n            </span>\n\n            <button \n                className=\"btn btn-outline-danger\"\n                onClick={ handleLogout }\n            >\n                <i className=\"fas fa-sign-out-alt\"></i>\n                <span> Salir</span>\n            </button>\n        </div>\n    )\n}\n\nexport default Navbar;\n","export const messages = {\n    allDay: 'Todo el día',\n    previous: '<',\n    next: '>',\n    today: 'Hoy',\n    month: 'Mes',\n    week: 'Semana',\n    day: 'Día',\n    agenda: 'Agenda',\n    date: 'Fecha',\n    time: 'Hora',\n    event: 'Evento',\n    noEventsInRange: 'No hay eventos en este rango',\n    showMore: total => `+ Ver más (${total})`\n};","import { types } from \"../types/types\";\n\n\n\nexport const uiOpenModal = () => ({ type: types.uiOpenModal });\n\nexport const uiCloseModal = () => ({ type: types.uiCloseModal });","import React from 'react';\n\nconst CalendarEvent = ({ event }) => {\n\n    const { title, user } = event;\n\n    return (\n        <div>\n            <strong> { title } </strong>\n            <span>- { user.name } </span>\n        </div>\n    )\n}\n\nexport default CalendarEvent;\n","import React, { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport moment from 'moment';\n\nimport Modal from 'react-modal';\nimport DateTimePicker from 'react-datetime-picker';\nimport Swal from 'sweetalert2';\n\nimport { uiCloseModal } from '../../actions/ui';\nimport { eventClearActiveEvent, eventStartAddNew, eventStartUpdate } from '../../actions/events';\n\nconst customStyles = {\n    content: {\n        top: '50%',\n        left: '50%',\n        right: 'auto',\n        bottom: 'auto',\n        marginRight: '-50%',\n        transform: 'translate(-50%, -50%)'\n    }\n};\nModal.setAppElement('#root');\n\nconst nowGlobal = moment().minutes(0).seconds(0).add(1, 'hours');\nconst endGlobal = nowGlobal.clone().add(1, 'hours');\n\nconst initEvent = {\n    title: '',\n    notes: '',\n    start: nowGlobal.toDate(),\n    end: endGlobal.toDate()\n};\n\nconst CalendarModal = () => {\n\n    const dispatch = useDispatch();\n\n    const { modalOpen } = useSelector(state => state.ui);\n    const { activeEvent } = useSelector(state => state.calendar);\n\n    const [ dateStart, setDateStart ] = useState( nowGlobal.toDate() );\n    const [ dateEnd, setDateEnd ] = useState( endGlobal.toDate() );\n    const [ titleValid, setTitleValid ] = useState(true);\n\n    const [formValues, setFormValues] = useState( initEvent );\n    const { title, notes, start, end } = formValues;\n\n    useEffect(() => {\n\n        if ( activeEvent ) {\n            setFormValues( activeEvent );\n        } else {\n            setFormValues( initEvent );\n        }\n\n    }, [activeEvent, setFormValues]);\n\n    const handleInputChange = ({ target }) => {\n\n        setFormValues({\n            ...formValues,\n            [target.name]: target.value\n        });\n\n    }\n\n    const closeModal = () => {\n        // TODO: cerrar el modal\n        dispatch( uiCloseModal() );\n        setFormValues( initEvent );\n        dispatch( eventClearActiveEvent() );\n    }\n\n    const handleStartDateChange = (e) => {\n        setDateStart(e);\n        setFormValues({\n            ...formValues,\n            start: e\n        });\n    }\n\n    const handleEndDateChange = (e) => {\n        setDateEnd(e);\n        setFormValues({\n            ...formValues,\n            end: e\n        });\n    }\n\n    const handleSubmitForm = (e) => {\n        e.preventDefault();\n\n        const momentStart = moment( start );\n        const momentEnd = moment( end );\n\n        if ( momentStart.isSameOrAfter(momentEnd) ) {\n            return Swal.fire('Error','La fecha fin debe de ser mayor a la fecha de inicio.');\n        }\n\n        if ( title.trim().length < 2 ) {\n            return setTitleValid( false );\n        }\n\n        //TODO: realizar grabación\n        if ( activeEvent ) {\n\n            dispatch( eventStartUpdate( formValues ) );\n\n        } else {\n\n            dispatch( eventStartAddNew(formValues) );\n\n        }\n\n        setTitleValid(true);\n        closeModal();\n    }\n\n    return (\n        <Modal\n          isOpen={ modalOpen }\n        //   onAfterOpen={ afterOpenModal }\n          onRequestClose={ closeModal }\n          style={ customStyles }\n          closeTimeoutMS={ 200 }\n          className=\"modal\"\n          overlayClassName=\"modal-fondo\"\n        >\n            <h3> { activeEvent ? 'Editar Evento' : 'Nuevo Evento' } </h3>\n            <hr />\n            <form \n                className=\"container\"\n                onSubmit={ handleSubmitForm }\n            >\n\n                <div className=\"form-group\">\n                    <label>Fecha y hora inicio</label>\n                    <DateTimePicker\n                        onChange={ handleStartDateChange }\n                        value={ dateStart }\n                        className=\"form-control\"\n                    />\n                </div>\n\n                <div className=\"form-group\">\n                    <label>Fecha y hora fin</label>\n                    <DateTimePicker\n                        onChange={ handleEndDateChange }\n                        value={ dateEnd }\n                        minDate={ dateStart }\n                        className=\"form-control\"\n                    />\n                </div>\n\n                <hr />\n                <div className=\"form-group\">\n                    <label>Titulo y notas</label>\n                    <input\n                        type=\"text\"\n                        className={`form-control ${ !titleValid && 'is-invalid' } `}\n                        placeholder=\"Título del evento\"\n                        name=\"title\"\n                        autoComplete=\"off\"\n                        value={ title }\n                        onChange={ handleInputChange }\n                    />\n                    <small id=\"emailHelp\" className=\"form-text text-muted\">Una descripción corta</small>\n                </div>\n\n                <div className=\"form-group\">\n                    <textarea\n                        type=\"text\"\n                        className=\"form-control\"\n                        placeholder=\"Notas\"\n                        rows=\"5\"\n                        name=\"notes\"\n                        value={ notes }\n                        onChange={ handleInputChange }\n                    ></textarea>\n                    <small id=\"emailHelp\" className=\"form-text text-muted\">Información adicional</small>\n                </div>\n\n                <button\n                    type=\"submit\"\n                    className=\"btn btn-outline-primary btn-block\"\n                >\n                    <i className=\"far fa-save\"></i>\n                    <span> Guardar</span>\n                </button>\n\n            </form>\n        </Modal>\n    );\n}\n\nexport default CalendarModal;\n","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { uiOpenModal } from '../../actions/ui';\n\nconst AddNewFab = () => {\n\n    const dispatch = useDispatch();\n\n    const handleAddNewEvent = () => {\n        dispatch( uiOpenModal() );\n    }\n\n    return (\n        <button\n            className=\"btn btn-primary fab\"\n            onClick={ handleAddNewEvent }\n        >\n            <i className=\"fas fa-plus\"></i>\n        </button>\n    )\n}\n\nexport default AddNewFab;\n","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { eventStartDelete } from '../../actions/events';\n\nconst DeleteEventFab = () => {\n    \n    const dispatch = useDispatch();\n    const { activeEvent } = useSelector(state => state.calendar);\n\n    const handleDeleteEvent = () => {\n\n        dispatch( eventStartDelete() );\n\n    }\n\n    return (\n        <button\n            className=\"btn btn-danger fab-danger\"\n            hidden={ activeEvent ? false : true }\n            onClick={ handleDeleteEvent }\n        >\n            <i className=\"fas fa-trash\"></i>\n            <span> Borrar Evento </span>\n        </button>\n    )\n}\n\nexport default DeleteEventFab;\n","import React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Calendar, momentLocalizer } from 'react-big-calendar';\nimport moment from 'moment';\n\nimport Navbar from '../ui/Navbar';\nimport { messages } from '../../helpers/calendarMessagesEs';\n\nimport { uiOpenModal } from '../../actions/ui';\n\nimport { eventClearActiveEvent, eventSetActive, eventStartLoading } from '../../actions/events';\n\nimport CalendarEvent from './CalendarEvent';\nimport CalendarModal from './CalendarModal';\nimport AddNewFab from '../ui/AddNewFab';\nimport DeleteEventFab from '../ui/DeleteEventFab';\n\nimport 'react-big-calendar/lib/css/react-big-calendar.css';\n\nimport 'moment/locale/es';\nmoment.locale('es');\n\nconst localizer = momentLocalizer(moment);\n\n// const events = [{\n//     title: 'Cumpleaños del jefe',\n//     start: moment().toDate(),\n//     end: moment().add(2, 'hours').toDate(),\n//     bgcolor: '#fafafa',\n//     notes: 'Comprar el pastel',\n//     user: {\n//         _id: '123',\n//         name: 'Raul'\n//     }\n// }];\n\nconst CalendarScreen = () => {\n\n    const dispatch = useDispatch();\n\n    const { events } = useSelector(state => state.calendar);\n    const { uid } = useSelector(state => state.auth);\n    // TODO: leer del store\n\n    const [lastView, setLastView] = useState( localStorage.getItem('lastView') || 'month' );\n\n    useEffect(() => {\n        \n        dispatch( eventStartLoading() );\n\n    }, [dispatch]);\n\n    const onDoubleClick = (e) => {\n        // console.log(e);\n        dispatch( uiOpenModal() );\n    }\n\n    const onSelectEvent = (e) => {\n        dispatch( eventSetActive(e) );\n    }\n\n    const onViewChange = (e) => {\n        setLastView(e);\n        localStorage.setItem('lastView', e);\n    }\n\n    const onSelectSlot = (e) => {\n        dispatch( eventClearActiveEvent() );\n    }\n\n    const eventStyleGetter = ( event, start, end, isSelected ) => {\n\n        const style = {\n            backgroundColor: ( uid === event.user._id ) ? '#367CF7' : '#465660',\n            borderRadius: '0px',\n            opacity: 0.8,\n            display: 'block',\n            color: 'white'\n        }\n\n        return { style };\n\n    };\n\n    return (\n        <div className=\"calendar-screen\">\n            <Navbar />\n\n            <Calendar\n                localizer={ localizer }\n                events={ events }\n                startAccessor=\"start\"\n                endAccessor=\"end\"\n                messages={ messages }\n                eventPropGetter={ eventStyleGetter }\n                onDoubleClickEvent={ onDoubleClick }\n                onSelectEvent={ onSelectEvent }\n                onView={ onViewChange }\n                onSelectSlot={ onSelectSlot }\n                selectable={ true }\n                view={ lastView }\n                components={{\n                    event: CalendarEvent\n                }}\n            />\n\n            <AddNewFab />\n            <DeleteEventFab />\n            <CalendarModal />\n        </div>\n    )\n}\n\nexport default CalendarScreen;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Route, Redirect } from 'react-router-dom';\n\nconst PublicRoute = ({\n    isLoggedIn,\n    component: Component,\n    ...rest\n}) => {\n    return (\n        <Route \n            { ...rest }\n            component={ (props) => (\n                ( !isLoggedIn )\n                    ? <Component { ...props } />\n                    : <Redirect to=\"/\" />\n            )}\n        />\n    );\n}\n\nPublicRoute.propTypes = {\n    isLoggedIn: PropTypes.bool.isRequired,\n    component: PropTypes.func.isRequired,\n}\n\nexport default PublicRoute;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Route, Redirect } from 'react-router-dom';\n\nconst PrivateRoute = ({\n    isLoggedIn,\n    component: Component,\n    ...rest\n}) => {\n    return (\n        <Route \n            { ...rest }\n            component={ (props) => (\n                ( isLoggedIn )\n                    ? <Component { ...props } />\n                    : <Redirect to=\"/login\" />\n            )}\n        />\n    );\n}\n\nPrivateRoute.propTypes = {\n    isLoggedIn: PropTypes.bool.isRequired,\n    component: PropTypes.func.isRequired,\n}\n\nexport default PrivateRoute;","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Redirect\n} from 'react-router-dom';\n\nimport { startChecking } from '../actions/auth';\nimport LoginScreen from '../components/auth/LoginScreen';\nimport CalendarScreen from '../components/calendar/CalendarScreen';\n\nimport PublicRoute from './PublicRoute';\nimport PrivateRoute from './PrivateRoute';\n\nconst AppRouter = () => {\n\n    const dispatch = useDispatch();\n\n    const { checking, uid } = useSelector(state => state.auth);\n\n    useEffect(() => {\n        dispatch( startChecking() );\n    }, [dispatch]);\n\n    if (checking) {\n        return <h5>Espere...</h5>\n    }\n\n    return (\n        <Router>\n            <div>\n                <Switch>\n                    <PublicRoute \n                        exact \n                        path=\"/login\" \n                        component={ LoginScreen } \n                        isLoggedIn={ !!uid }\n                    />\n                    <PrivateRoute \n                        exact \n                        path=\"/\" \n                        component={ CalendarScreen } \n                        isLoggedIn={ !!uid }    \n                    />\n\n                    <Redirect to=\"/\" />\n                </Switch>\n            </div>\n        </Router>\n    )\n}\n\nexport default AppRouter;\n","import React from 'react';\nimport { Provider } from 'react-redux';\n\nimport { store } from './store/store';\nimport AppRouter from './routers/AppRouter';\n\nconst CalendarApp = () => {\n    return (\n        <Provider store={ store }>\n            <AppRouter />\n        </Provider>\n    )\n}\n\nexport default CalendarApp;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport CalendarApp from './CalendarApp';\n\nimport './style.css';\nimport '../node_modules/bootstrap/dist/css/bootstrap.css';\n\n// console.log(process.env);\n\nReactDOM.render(\n    <CalendarApp />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}